opt_out_usage
default_platform :mac
setup_circle_ci

desc "Increment (with 'bump' option) or set (with 'pre' option) the framework version"
lane :bump_version do |options|
  version = version_bump_xcconfig(path: "Configurations/Base.xcconfig", bump_type: options[:bump] && options[:bump].to_sym, version_pre: options[:pre])
  deferred_readme_set_version(path: "Documentation/Guide/Getting Started.md", version: version)
  podspec_set_version(path: "BNRDeferred.podspec", version: version)
  puts version
end

desc "Output documentation using Jazzy into docs/"
lane :build_docs do
  jazzy(config: ".jazzy.yml")
end

desc "Build and publish documentation from docs/ into gh-pages"
lane :publish_docs do
  build_docs
  publish_gh_pages(path: "docs", author_name: "Big Nerd", author_email: "cocoa-engineering@bignerdranch.com")
end

desc "Common actions for quality assurance"
private_lane :audit do
  swiftlint(strict: true)
  pod_lib_lint(fail_fast: true, use_libraries: true)
  pod_lib_lint(fail_fast: true, use_libraries: false)
  build_docs
end

platform :mac do
  desc "Test using Swift Package Manager for macOS and Linux"
  lane :test do
    sh "swift test --parallel"
  end

  desc "Perform linting and publish documentation"
  lane :ci do
    test
    audit
  end
end

platform :ios do
  desc "Test using Xcode for iOS"
  lane :test do
    scan(scheme: "MobileDeferred", device: "iPhone 8 (11.4)")
  end

  desc "Validate we can build with Playgrounds compatibility code"
  private_lane :build_for_playgrounds do
    xcodebuild(scheme: "MobileDeferred", build_settings: {
      "SWIFT_ACTIVE_COMPILATION_CONDITIONS": "XCODE FORCE_PLAYGROUND_COMPATIBILITY"
    })
  end

  desc "Execute tests and ensure that auxiliary platforms build"
  lane :ci do
    test
    build_for_playgrounds
  end
end
