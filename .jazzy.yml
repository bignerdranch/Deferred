# jazzy --config .jazzy.yml
author: "Big Nerd Ranch"
author_url: "http://bignerdranch.github.io"
copyright: "Â© 2014-2016 [Big Nerd Ranch](//www.bignerdranch.com) under [MIT license](//github.com/bignerdranch/Deferred/blob/master/LICENSE.txt)."
custom_categories:
  - name: Intuition
    children:
    - Why Deferred?
    - Basic Tasks
    - Mastering The Future Type
    - Getting Started
  - name: Futures and Promises
    children:
    - Deferred
    - FutureProtocol
    - PromiseProtocol
  - name: Transforming Futures
    children:
    - Future
    - Collection
    - Sequence
    - IgnoringFuture
  - name: Controlling Where Callbacks Execute
    children:
    - Executor
    - DispatchQueue
    - OperationQueue
    - RunLoop
    - CFRunLoop
  - name: Task
    children:
    - Either
    - Task
    - TaskResult
    - TaskGroup
  - name: Coordinating Access to Data
    children:
    - Protected
    - Locking
  - name: Coordination Primitives
    children:
    - NativeLock
    - POSIXReadWriteLock
    - DispatchSemaphore
    - NSLock
documentation: Documentation/Guide/*.md
abstract: Documentation/*.md
github_url: "https://github.com/bignerdranch/Deferred"
head: |
  <meta property="og:site_name" content="Deferred Reference">
  <meta property="og:description" content="An implementation of OCaml's Deferred for Swift. It lets you work with values that haven't been determined yet, like an array that's coming later from a web service call.">
  <meta property="og:image" content="//www.bignerdranch.com/img/bnr-logo-square.png">
  <link rel="shortcut icon" type="image/x-icon" href="//www.bignerdranch.com/favicon.png">
hide_documentation_coverage: true
module: Deferred
root_url: "http://bignerdranch.github.io/Deferred/"
theme: fullwidth
